<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-lisp.atom"/>
<id>urn:rprimus:github:newlisprepos</id>
<updated>2021-02-11T07:19:37Z</updated>
<title type='text'>New GitHub Lisp Repos</title>
 <entry>
  <title>realdea8: cl-bitcoin-api-in-heroku</title>
  <author>
   <name>realdea8</name>
  </author>
  <link href="https://github.com/realdea8/cl-bitcoin-api-in-heroku" />
  <id>urn:rprimus:github:realdea8:cl-bitcoin-api-in-heroku</id>
  <published>2021-02-11T07:19:37Z</published>
  <updated>2021-02-11T07:19:37Z</updated>
  <content type="html">
   Bitcoin REST API, developed using Common Lisp and Postgres, and deployed to Heroku 
  </content>
 </entry>
 <entry>
  <title>hyotang666: quaspar</title>
  <author>
   <name>hyotang666</name>
  </author>
  <link href="https://github.com/hyotang666/quaspar" />
  <id>urn:rprimus:github:hyotang666:quaspar</id>
  <published>2021-02-11T06:04:30Z</published>
  <updated>2021-02-11T06:04:30Z</updated>
  <content type="html">
   QUAternary Spatial PARtitioning tree especially for game engine.
  </content>
 </entry>
 <entry>
  <title>joshuahoeflich: replwm</title>
  <author>
   <name>joshuahoeflich</name>
  </author>
  <link href="https://github.com/joshuahoeflich/replwm" />
  <id>urn:rprimus:github:joshuahoeflich:replwm</id>
  <published>2021-02-11T03:07:03Z</published>
  <updated>2021-02-11T03:07:03Z</updated>
  <content type="html">
   A hackable window manager implemented with Common LISP.
  </content>
 </entry>
 <entry>
  <title>SirojiddinSaidmurodov: FLP</title>
  <author>
   <name>SirojiddinSaidmurodov</name>
  </author>
  <link href="https://github.com/SirojiddinSaidmurodov/FLP" />
  <id>urn:rprimus:github:SirojiddinSaidmurodov:FLP</id>
  <published>2021-02-10T23:22:24Z</published>
  <updated>2021-02-10T23:22:24Z</updated>
  <content type="html">
   Functional and logical programming
  </content>
 </entry>
 <entry>
  <title>deril: idcode</title>
  <author>
   <name>deril</name>
  </author>
  <link href="https://github.com/deril/idcode" />
  <id>urn:rprimus:github:deril:idcode</id>
  <published>2021-02-10T20:19:15Z</published>
  <updated>2021-02-10T20:19:15Z</updated>
  <content type="html">
   Generates random id code of baltic countries (Estonia, Latvia, Lithuania)
  </content>
 </entry>
 <entry>
  <title>108ZH: CADLISPDEVLOG</title>
  <author>
   <name>108ZH</name>
  </author>
  <link href="https://github.com/108ZH/CADLISPDEVLOG" />
  <id>urn:rprimus:github:108ZH:CADLISPDEVLOG</id>
  <published>2021-02-10T13:40:08Z</published>
  <updated>2021-02-10T13:40:08Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>FranciscoBuru: Inteligencia_Artificial</title>
  <author>
   <name>FranciscoBuru</name>
  </author>
  <link href="https://github.com/FranciscoBuru/Inteligencia_Artificial" />
  <id>urn:rprimus:github:FranciscoBuru:Inteligencia_Artificial</id>
  <published>2021-02-09T20:30:37Z</published>
  <updated>2021-02-09T20:30:37Z</updated>
  <content type="html">
   Repositorio del curso de Inteligencia Artificial, Primavera 2021
  </content>
 </entry>
 <entry>
  <title>rVrengaraju: CS-161</title>
  <author>
   <name>rVrengaraju</name>
  </author>
  <link href="https://github.com/rVrengaraju/CS-161" />
  <id>urn:rprimus:github:rVrengaraju:CS-161</id>
  <published>2021-02-09T18:37:05Z</published>
  <updated>2021-02-09T18:37:05Z</updated>
  <content type="html">
   my 161 projects from spring 2020
  </content>
 </entry>
 <entry>
  <title>ccqpein: q-cicd</title>
  <author>
   <name>ccqpein</name>
  </author>
  <link href="https://github.com/ccqpein/q-cicd" />
  <id>urn:rprimus:github:ccqpein:q-cicd</id>
  <published>2021-02-09T18:08:32Z</published>
  <updated>2021-02-09T18:08:32Z</updated>
  <content type="html">
   Personal CICD
  </content>
 </entry>
 <entry>
  <title>fshemsing: parse</title>
  <author>
   <name>fshemsing</name>
  </author>
  <link href="https://github.com/fshemsing/parse" />
  <id>urn:rprimus:github:fshemsing:parse</id>
  <published>2021-02-09T15:52:18Z</published>
  <updated>2021-02-09T15:52:18Z</updated>
  <content type="html">
   applicative parsers based on tutorial by S. D. Swierstra
  </content>
 </entry>
 <entry>
  <title>fshemsing: curried-functions</title>
  <author>
   <name>fshemsing</name>
  </author>
  <link href="https://github.com/fshemsing/curried-functions" />
  <id>urn:rprimus:github:fshemsing:curried-functions</id>
  <published>2021-02-09T15:44:33Z</published>
  <updated>2021-02-09T15:44:33Z</updated>
  <content type="html">
   construct and manipulate curried functions
  </content>
 </entry>
 <entry>
  <title>fshemsing: stream</title>
  <author>
   <name>fshemsing</name>
  </author>
  <link href="https://github.com/fshemsing/stream" />
  <id>urn:rprimus:github:fshemsing:stream</id>
  <published>2021-02-09T15:34:40Z</published>
  <updated>2021-02-09T15:34:40Z</updated>
  <content type="html">
   lazy streams representing potentially infinite sequences
  </content>
 </entry>
 <entry>
  <title>xyx0no646: hamoten4kirikirisdl2</title>
  <author>
   <name>xyx0no646</name>
  </author>
  <link href="https://github.com/xyx0no646/hamoten4kirikirisdl2" />
  <id>urn:rprimus:github:xyx0no646:hamoten4kirikirisdl2</id>
  <published>2021-02-09T15:26:31Z</published>
  <updated>2021-02-09T15:26:31Z</updated>
  <content type="html">
   é±§å¤© for åéåéSDL2
  </content>
 </entry>
 <entry>
  <title>fshemsing: logic</title>
  <author>
   <name>fshemsing</name>
  </author>
  <link href="https://github.com/fshemsing/logic" />
  <id>urn:rprimus:github:fshemsing:logic</id>
  <published>2021-02-09T14:53:57Z</published>
  <updated>2021-02-09T14:53:57Z</updated>
  <content type="html">
   CL implementation of the logic programming system from The Reasoned Schemer
  </content>
 </entry>
 <entry>
  <title>ashw: desmos_CL_examples</title>
  <author>
   <name>ashw</name>
  </author>
  <link href="https://github.com/ashw/desmos_CL_examples" />
  <id>urn:rprimus:github:ashw:desmos_CL_examples</id>
  <published>2021-02-09T14:52:45Z</published>
  <updated>2021-02-09T14:52:45Z</updated>
  <content type="html">
   Examples of code for the desmos computation layer
  </content>
 </entry>
 <entry>
  <title>yitzchak: sheafhom</title>
  <author>
   <name>yitzchak</name>
  </author>
  <link href="https://github.com/yitzchak/sheafhom" />
  <id>urn:rprimus:github:yitzchak:sheafhom</id>
  <published>2021-02-09T14:21:39Z</published>
  <updated>2021-02-09T14:21:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.home</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.home" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.home</id>
  <published>2021-02-09T13:32:56Z</published>
  <updated>2021-02-09T13:32:56Z</updated>
  <content type="html">
   The code running at http://dwim.hu
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.lazy-eval</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.lazy-eval" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.lazy-eval</id>
  <published>2021-02-09T12:34:41Z</published>
  <updated>2021-02-09T12:34:41Z</updated>
  <content type="html">
   Common Lisp lazy evaluation semantics using a proper code walker.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.meta-model</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.meta-model" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.meta-model</id>
  <published>2021-02-09T12:29:29Z</published>
  <updated>2021-02-09T12:29:29Z</updated>
  <content type="html">
   A Common Lisp model for modelling models: entity, association, generalization, subject, type, etc.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.model</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.model" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.model</id>
  <published>2021-02-09T12:14:51Z</published>
  <updated>2021-02-09T12:14:51Z</updated>
  <content type="html">
   A library of data models, typically used in enterprise applications. Stuff like settlement, address, audited-object, forum, etc. Uses on hu.dwim.meta-model for the meta-level.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.serializer</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.serializer" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.serializer</id>
  <published>2021-02-09T12:02:00Z</published>
  <updated>2021-02-09T12:02:00Z</updated>
  <content type="html">
   Turn any Lisp object into a byte vector, and back.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.reiterate</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.reiterate" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.reiterate</id>
  <published>2021-02-09T11:58:09Z</published>
  <updated>2021-02-09T11:58:09Z</updated>
  <content type="html">
   The Common Lisp iterate macro â rethought and rewritten using a proper walker.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.reader</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.reader" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.reader</id>
  <published>2021-02-09T11:46:47Z</published>
  <updated>2021-02-09T11:46:47Z</updated>
  <content type="html">
   Slightly customized version of Pascal Bourguignon&#039;s Common Lisp reader.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.quasi-quote</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.quasi-quote" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.quasi-quote</id>
  <published>2021-02-09T11:41:07Z</published>
  <updated>2021-02-09T11:41:07Z</updated>
  <content type="html">
   A framework to generalize quasi-quotation, i.e. `(,foo) but for SQL, XML, JavaScript, etc.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.partial-eval</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.partial-eval" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.partial-eval</id>
  <published>2021-02-09T11:33:47Z</published>
  <updated>2021-02-09T11:33:47Z</updated>
  <content type="html">
   Customizable partial evaluation for Common Lisp
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.graphviz</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.graphviz" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.graphviz</id>
  <published>2021-02-09T11:27:09Z</published>
  <updated>2021-02-09T11:27:09Z</updated>
  <content type="html">
   Common Lisp FFI for libgvc aka graphviz
  </content>
 </entry>
 <entry>
  <title>dwclark: cl-hashing</title>
  <author>
   <name>dwclark</name>
  </author>
  <link href="https://github.com/dwclark/cl-hashing" />
  <id>urn:rprimus:github:dwclark:cl-hashing</id>
  <published>2021-02-09T02:42:52Z</published>
  <updated>2021-02-09T02:42:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mavis-risetti: lox</title>
  <author>
   <name>mavis-risetti</name>
  </author>
  <link href="https://github.com/mavis-risetti/lox" />
  <id>urn:rprimus:github:mavis-risetti:lox</id>
  <published>2021-02-09T00:24:36Z</published>
  <updated>2021-02-09T00:24:36Z</updated>
  <content type="html">
   A Tree Walker interpreter for the lox language
  </content>
 </entry>
</feed>
