<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-lisp.atom"/>
<id>urn:rprimus:github:newlisprepos</id>
<updated>2020-07-25T03:02:51Z</updated>
<title type='text'>New GitHub Lisp Repos</title>
 <entry>
  <title>javbit: asciify</title>
  <author>
   <name>javbit</name>
  </author>
  <link href="https://github.com/javbit/asciify" />
  <id>urn:rprimus:github:javbit:asciify</id>
  <published>2020-07-25T03:02:51Z</published>
  <updated>2020-07-25T03:02:51Z</updated>
  <content type="html">
   Turn images into ASCII art.
  </content>
 </entry>
 <entry>
  <title>jinjagit: lisp</title>
  <author>
   <name>jinjagit</name>
  </author>
  <link href="https://github.com/jinjagit/lisp" />
  <id>urn:rprimus:github:jinjagit:lisp</id>
  <published>2020-07-24T18:39:23Z</published>
  <updated>2020-07-24T18:39:23Z</updated>
  <content type="html">
   Common Lisp
  </content>
 </entry>
 <entry>
  <title>mparache: se-film</title>
  <author>
   <name>mparache</name>
  </author>
  <link href="https://github.com/mparache/se-film" />
  <id>urn:rprimus:github:mparache:se-film</id>
  <published>2020-07-24T15:29:35Z</published>
  <updated>2020-07-24T15:29:35Z</updated>
  <content type="html">
   CrÃ©ation dâun systÃ¨me expert dâordre 0+ permettant la reconnaissance du genre cinÃ©matographique dâun film donnÃ©
  </content>
 </entry>
 <entry>
  <title>yitzchak: trivial-do</title>
  <author>
   <name>yitzchak</name>
  </author>
  <link href="https://github.com/yitzchak/trivial-do" />
  <id>urn:rprimus:github:yitzchak:trivial-do</id>
  <published>2020-07-24T11:28:15Z</published>
  <updated>2020-07-24T11:28:15Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>minghu6: smart-code-modifier</title>
  <author>
   <name>minghu6</name>
  </author>
  <link href="https://github.com/minghu6/smart-code-modifier" />
  <id>urn:rprimus:github:minghu6:smart-code-modifier</id>
  <published>2020-07-24T10:54:45Z</published>
  <updated>2020-07-24T10:54:45Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>wasuken: cl-git-kusa</title>
  <author>
   <name>wasuken</name>
  </author>
  <link href="https://github.com/wasuken/cl-git-kusa" />
  <id>urn:rprimus:github:wasuken:cl-git-kusa</id>
  <published>2020-07-24T05:33:23Z</published>
  <updated>2020-07-24T05:33:23Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jg20019: lbac-in-common-lisp</title>
  <author>
   <name>jg20019</name>
  </author>
  <link href="https://github.com/jg20019/lbac-in-common-lisp" />
  <id>urn:rprimus:github:jg20019:lbac-in-common-lisp</id>
  <published>2020-07-23T22:41:28Z</published>
  <updated>2020-07-23T22:41:28Z</updated>
  <content type="html">
   Working through Jack Crenshaw&#039;s tutorial Let&#039;s Build a Compiler in Common Lisp
  </content>
 </entry>
 <entry>
  <title>borodust: bodge-physx</title>
  <author>
   <name>borodust</name>
  </author>
  <link href="https://github.com/borodust/bodge-physx" />
  <id>urn:rprimus:github:borodust:bodge-physx</id>
  <published>2020-07-23T21:21:06Z</published>
  <updated>2020-07-23T21:21:06Z</updated>
  <content type="html">
   Common Lisp bindings to PhysX physics engine
  </content>
 </entry>
 <entry>
  <title>luismbo: trivial-advice</title>
  <author>
   <name>luismbo</name>
  </author>
  <link href="https://github.com/luismbo/trivial-advice" />
  <id>urn:rprimus:github:luismbo:trivial-advice</id>
  <published>2020-07-23T18:06:58Z</published>
  <updated>2020-07-23T18:06:58Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Mark-Boger: scripts</title>
  <author>
   <name>Mark-Boger</name>
  </author>
  <link href="https://github.com/Mark-Boger/scripts" />
  <id>urn:rprimus:github:Mark-Boger:scripts</id>
  <published>2020-07-23T16:57:52Z</published>
  <updated>2020-07-23T16:57:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Abzalov50: zacl</title>
  <author>
   <name>Abzalov50</name>
  </author>
  <link href="https://github.com/Abzalov50/zacl" />
  <id>urn:rprimus:github:Abzalov50:zacl</id>
  <published>2020-07-23T12:52:56Z</published>
  <updated>2020-07-23T12:52:56Z</updated>
  <content type="html">
   Kind of fork of original Common Lisp Zacl package
  </content>
 </entry>
 <entry>
  <title>kar7hik: signal</title>
  <author>
   <name>kar7hik</name>
  </author>
  <link href="https://github.com/kar7hik/signal" />
  <id>urn:rprimus:github:kar7hik:signal</id>
  <published>2020-07-23T09:45:07Z</published>
  <updated>2020-07-23T09:45:07Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>dbarends: CommonLisp</title>
  <author>
   <name>dbarends</name>
  </author>
  <link href="https://github.com/dbarends/CommonLisp" />
  <id>urn:rprimus:github:dbarends:CommonLisp</id>
  <published>2020-07-23T08:55:36Z</published>
  <updated>2020-07-23T08:55:36Z</updated>
  <content type="html">
   Wat probeersels
  </content>
 </entry>
 <entry>
  <title>robert-strandh: Sandbox</title>
  <author>
   <name>robert-strandh</name>
  </author>
  <link href="https://github.com/robert-strandh/Sandbox" />
  <id>urn:rprimus:github:robert-strandh:Sandbox</id>
  <published>2020-07-23T08:54:01Z</published>
  <updated>2020-07-23T08:54:01Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>shivali1709: functionalPrograming</title>
  <author>
   <name>shivali1709</name>
  </author>
  <link href="https://github.com/shivali1709/functionalPrograming" />
  <id>urn:rprimus:github:shivali1709:functionalPrograming</id>
  <published>2020-07-23T05:14:21Z</published>
  <updated>2020-07-23T05:14:21Z</updated>
  <content type="html">
   Functional Programming in Lisp
  </content>
 </entry>
</feed>
