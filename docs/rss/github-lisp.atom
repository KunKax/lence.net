<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-lisp.atom"/>
<id>urn:rprimus:github:newlisprepos</id>
<updated>2021-01-29T02:44:48Z</updated>
<title type='text'>New GitHub Lisp Repos</title>
 <entry>
  <title>lucAlmeida: text-game-engine</title>
  <author>
   <name>lucAlmeida</name>
  </author>
  <link href="https://github.com/lucAlmeida/text-game-engine" />
  <id>urn:rprimus:github:lucAlmeida:text-game-engine</id>
  <published>2021-01-29T02:44:48Z</published>
  <updated>2021-01-29T02:44:48Z</updated>
  <content type="html">
   Text (Zork-like) Game Engine (From Land of Lisp)
  </content>
 </entry>
 <entry>
  <title>aerique: coinfest</title>
  <author>
   <name>aerique</name>
  </author>
  <link href="https://github.com/aerique/coinfest" />
  <id>urn:rprimus:github:aerique:coinfest</id>
  <published>2021-01-28T21:00:37Z</published>
  <updated>2021-01-28T21:00:37Z</updated>
  <content type="html">
   A cryptocurrency ticker app for Sailfish OS written in Common Lisp.
  </content>
 </entry>
 <entry>
  <title>szos: clim-defconfig</title>
  <author>
   <name>szos</name>
  </author>
  <link href="https://github.com/szos/clim-defconfig" />
  <id>urn:rprimus:github:szos:clim-defconfig</id>
  <published>2021-01-28T20:04:12Z</published>
  <updated>2021-01-28T20:04:12Z</updated>
  <content type="html">
   A CLIM based GUI for defconfig
  </content>
 </entry>
 <entry>
  <title>mattcoding4days: csci330</title>
  <author>
   <name>mattcoding4days</name>
  </author>
  <link href="https://github.com/mattcoding4days/csci330" />
  <id>urn:rprimus:github:mattcoding4days:csci330</id>
  <published>2021-01-28T19:55:55Z</published>
  <updated>2021-01-28T19:55:55Z</updated>
  <content type="html">
   Place to hold my lisp code for Computer science 330
  </content>
 </entry>
 <entry>
  <title>Chehlarov: Lisp</title>
  <author>
   <name>Chehlarov</name>
  </author>
  <link href="https://github.com/Chehlarov/Lisp" />
  <id>urn:rprimus:github:Chehlarov:Lisp</id>
  <published>2021-01-28T19:38:34Z</published>
  <updated>2021-01-28T19:38:34Z</updated>
  <content type="html">
   Lisps for Autocad
  </content>
 </entry>
 <entry>
  <title>pietroepis: regexp-to-nfa-compiler</title>
  <author>
   <name>pietroepis</name>
  </author>
  <link href="https://github.com/pietroepis/regexp-to-nfa-compiler" />
  <id>urn:rprimus:github:pietroepis:regexp-to-nfa-compiler</id>
  <published>2021-01-28T16:06:20Z</published>
  <updated>2021-01-28T16:06:20Z</updated>
  <content type="html">
   Programming Languages Project - UniMiB
  </content>
 </entry>
 <entry>
  <title>gefjon: generator</title>
  <author>
   <name>gefjon</name>
  </author>
  <link href="https://github.com/gefjon/generator" />
  <id>urn:rprimus:github:gefjon:generator</id>
  <published>2021-01-28T00:29:46Z</published>
  <updated>2021-01-28T00:29:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>m0rrism0rris: treevis</title>
  <author>
   <name>m0rrism0rris</name>
  </author>
  <link href="https://github.com/m0rrism0rris/treevis" />
  <id>urn:rprimus:github:m0rrism0rris:treevis</id>
  <published>2021-01-27T22:52:50Z</published>
  <updated>2021-01-27T22:52:50Z</updated>
  <content type="html">
   Tree visualizer written in Common Lisp.
  </content>
 </entry>
 <entry>
  <title>Siddysimon: FactorialProof</title>
  <author>
   <name>Siddysimon</name>
  </author>
  <link href="https://github.com/Siddysimon/FactorialProof" />
  <id>urn:rprimus:github:Siddysimon:FactorialProof</id>
  <published>2021-01-27T18:19:33Z</published>
  <updated>2021-01-27T18:19:33Z</updated>
  <content type="html">
   This was an automated proof for a CS2800 assignment using the ACL2 Sedan. It proves that the non-accumulator and accumulator functions are equivalent for factorials.
  </content>
 </entry>
 <entry>
  <title>Virtual-Insurance-Products: cl-sysop</title>
  <author>
   <name>Virtual-Insurance-Products</name>
  </author>
  <link href="https://github.com/Virtual-Insurance-Products/cl-sysop" />
  <id>urn:rprimus:github:Virtual-Insurance-Products:cl-sysop</id>
  <published>2021-01-27T17:45:52Z</published>
  <updated>2021-01-27T17:45:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.debug</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.debug" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.debug</id>
  <published>2021-01-27T15:53:27Z</published>
  <updated>2021-01-27T15:53:27Z</updated>
  <content type="html">
   Common Lisp debug helpers
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.uri</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.uri" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.uri</id>
  <published>2021-01-27T15:44:09Z</published>
  <updated>2021-01-27T15:44:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.walker</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.walker" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.walker</id>
  <published>2021-01-27T15:18:05Z</published>
  <updated>2021-01-27T15:18:05Z</updated>
  <content type="html">
   Customizable code walker for Common Lisp. Uses CLOS and ContextL.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.util</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.util" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.util</id>
  <published>2021-01-27T15:11:10Z</published>
  <updated>2021-01-27T15:11:10Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.syntax-sugar</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.syntax-sugar" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.syntax-sugar</id>
  <published>2021-01-27T14:37:22Z</published>
  <updated>2021-01-27T14:37:22Z</updated>
  <content type="html">
   Framework to introduce and work with syntax sugars in Common Lisp.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.stefil</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.stefil" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.stefil</id>
  <published>2021-01-27T14:30:38Z</published>
  <updated>2021-01-27T14:30:38Z</updated>
  <content type="html">
   Common Lisp testing framework blending into normal Slime development.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.logger</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.logger" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.logger</id>
  <published>2021-01-27T14:23:40Z</published>
  <updated>2021-01-27T14:23:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.computed-class</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.computed-class" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.computed-class</id>
  <published>2021-01-27T14:13:03Z</published>
  <updated>2021-01-27T14:13:03Z</updated>
  <content type="html">
   Constraint based change propagation with CLOS integration.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.delico</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.delico" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.delico</id>
  <published>2021-01-27T14:10:22Z</published>
  <updated>2021-01-27T14:10:22Z</updated>
  <content type="html">
   delimited continuations for Common Lisp
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.common-lisp</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.common-lisp" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.common-lisp</id>
  <published>2021-01-27T14:05:18Z</published>
  <updated>2021-01-27T14:05:18Z</updated>
  <content type="html">
   probably a mistake
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.common</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.common" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.common</id>
  <published>2021-01-27T13:33:26Z</published>
  <updated>2021-01-27T13:33:26Z</updated>
  <content type="html">
   the code shared by all our hu.dwim.* projects
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.asdf</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.asdf" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.asdf</id>
  <published>2021-01-27T10:00:36Z</published>
  <updated>2021-01-27T10:00:36Z</updated>
  <content type="html">
   ASDF extensions used by most of our projects.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.def</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.def" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.def</id>
  <published>2021-01-27T08:52:55Z</published>
  <updated>2021-01-27T08:52:55Z</updated>
  <content type="html">
   One macro to define them all.
  </content>
 </entry>
 <entry>
  <title>Antoine-B-EQ: number-guess</title>
  <author>
   <name>Antoine-B-EQ</name>
  </author>
  <link href="https://github.com/Antoine-B-EQ/number-guess" />
  <id>urn:rprimus:github:Antoine-B-EQ:number-guess</id>
  <published>2021-01-27T07:44:11Z</published>
  <updated>2021-01-27T07:44:11Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.defclass-star</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.defclass-star" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.defclass-star</id>
  <published>2021-01-27T07:07:36Z</published>
  <updated>2021-01-27T07:07:36Z</updated>
  <content type="html">
   A Common Lisp DEFCLASS* for less boilerplate
  </content>
 </entry>
 <entry>
  <title>C-Entropy: audio-tag</title>
  <author>
   <name>C-Entropy</name>
  </author>
  <link href="https://github.com/C-Entropy/audio-tag" />
  <id>urn:rprimus:github:C-Entropy:audio-tag</id>
  <published>2021-01-27T05:12:57Z</published>
  <updated>2021-01-27T05:12:57Z</updated>
  <content type="html">
   A simple tool to duel with audio tag in lisp
  </content>
 </entry>
</feed>
