<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-lisp.atom"/>
<id>urn:rprimus:github:newlisprepos</id>
<updated>2021-01-28T00:29:46Z</updated>
<title type='text'>New GitHub Lisp Repos</title>
 <entry>
  <title>gefjon: generator</title>
  <author>
   <name>gefjon</name>
  </author>
  <link href="https://github.com/gefjon/generator" />
  <id>urn:rprimus:github:gefjon:generator</id>
  <published>2021-01-28T00:29:46Z</published>
  <updated>2021-01-28T00:29:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>m0rrism0rris: treevis</title>
  <author>
   <name>m0rrism0rris</name>
  </author>
  <link href="https://github.com/m0rrism0rris/treevis" />
  <id>urn:rprimus:github:m0rrism0rris:treevis</id>
  <published>2021-01-27T22:52:50Z</published>
  <updated>2021-01-27T22:52:50Z</updated>
  <content type="html">
   Tree visualizer written in Common Lisp.
  </content>
 </entry>
 <entry>
  <title>Siddysimon: FactorialProof</title>
  <author>
   <name>Siddysimon</name>
  </author>
  <link href="https://github.com/Siddysimon/FactorialProof" />
  <id>urn:rprimus:github:Siddysimon:FactorialProof</id>
  <published>2021-01-27T18:19:33Z</published>
  <updated>2021-01-27T18:19:33Z</updated>
  <content type="html">
   This was an automated proof for a CS2800 assignment using the ACL2 Sedan. It proves that the non-accumulator and accumulator functions are equivalent for factorials.
  </content>
 </entry>
 <entry>
  <title>Virtual-Insurance-Products: cl-sysop</title>
  <author>
   <name>Virtual-Insurance-Products</name>
  </author>
  <link href="https://github.com/Virtual-Insurance-Products/cl-sysop" />
  <id>urn:rprimus:github:Virtual-Insurance-Products:cl-sysop</id>
  <published>2021-01-27T17:45:52Z</published>
  <updated>2021-01-27T17:45:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>surniki: c-unit-check</title>
  <author>
   <name>surniki</name>
  </author>
  <link href="https://github.com/surniki/c-unit-check" />
  <id>urn:rprimus:github:surniki:c-unit-check</id>
  <published>2021-01-27T17:15:03Z</published>
  <updated>2021-01-27T17:15:03Z</updated>
  <content type="html">
   A preprocessor for C programs that performs static physical unit checking.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.debug</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.debug" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.debug</id>
  <published>2021-01-27T15:53:27Z</published>
  <updated>2021-01-27T15:53:27Z</updated>
  <content type="html">
   Common Lisp debug helpers
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.uri</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.uri" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.uri</id>
  <published>2021-01-27T15:44:09Z</published>
  <updated>2021-01-27T15:44:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.walker</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.walker" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.walker</id>
  <published>2021-01-27T15:18:05Z</published>
  <updated>2021-01-27T15:18:05Z</updated>
  <content type="html">
   Customizable code walker for Common Lisp. Uses CLOS and ContextL.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.util</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.util" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.util</id>
  <published>2021-01-27T15:11:10Z</published>
  <updated>2021-01-27T15:11:10Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.syntax-sugar</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.syntax-sugar" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.syntax-sugar</id>
  <published>2021-01-27T14:37:22Z</published>
  <updated>2021-01-27T14:37:22Z</updated>
  <content type="html">
   Framework to introduce and work with syntax sugars in Common Lisp.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.stefil</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.stefil" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.stefil</id>
  <published>2021-01-27T14:30:38Z</published>
  <updated>2021-01-27T14:30:38Z</updated>
  <content type="html">
   Common Lisp testing framework blending into normal Slime development.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.logger</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.logger" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.logger</id>
  <published>2021-01-27T14:23:40Z</published>
  <updated>2021-01-27T14:23:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.computed-class</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.computed-class" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.computed-class</id>
  <published>2021-01-27T14:13:03Z</published>
  <updated>2021-01-27T14:13:03Z</updated>
  <content type="html">
   Constraint based change propagation with CLOS integration.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.delico</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.delico" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.delico</id>
  <published>2021-01-27T14:10:22Z</published>
  <updated>2021-01-27T14:10:22Z</updated>
  <content type="html">
   delimited continuations for Common Lisp
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.common-lisp</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.common-lisp" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.common-lisp</id>
  <published>2021-01-27T14:05:18Z</published>
  <updated>2021-01-27T14:05:18Z</updated>
  <content type="html">
   probably a mistake
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.common</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.common" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.common</id>
  <published>2021-01-27T13:33:26Z</published>
  <updated>2021-01-27T13:33:26Z</updated>
  <content type="html">
   the code shared by all our hu.dwim.* projects
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.asdf</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.asdf" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.asdf</id>
  <published>2021-01-27T10:00:36Z</published>
  <updated>2021-01-27T10:00:36Z</updated>
  <content type="html">
   ASDF extensions used by most of our projects.
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.def</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.def" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.def</id>
  <published>2021-01-27T08:52:55Z</published>
  <updated>2021-01-27T08:52:55Z</updated>
  <content type="html">
   One macro to define them all.
  </content>
 </entry>
 <entry>
  <title>Antoine-B-EQ: number-guess</title>
  <author>
   <name>Antoine-B-EQ</name>
  </author>
  <link href="https://github.com/Antoine-B-EQ/number-guess" />
  <id>urn:rprimus:github:Antoine-B-EQ:number-guess</id>
  <published>2021-01-27T07:44:11Z</published>
  <updated>2021-01-27T07:44:11Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hu-dwim: hu.dwim.defclass-star</title>
  <author>
   <name>hu-dwim</name>
  </author>
  <link href="https://github.com/hu-dwim/hu.dwim.defclass-star" />
  <id>urn:rprimus:github:hu-dwim:hu.dwim.defclass-star</id>
  <published>2021-01-27T07:07:36Z</published>
  <updated>2021-01-27T07:07:36Z</updated>
  <content type="html">
   A Common Lisp DEFCLASS* for less boilerplate
  </content>
 </entry>
 <entry>
  <title>C-Entropy: audio-tag</title>
  <author>
   <name>C-Entropy</name>
  </author>
  <link href="https://github.com/C-Entropy/audio-tag" />
  <id>urn:rprimus:github:C-Entropy:audio-tag</id>
  <published>2021-01-27T05:12:57Z</published>
  <updated>2021-01-27T05:12:57Z</updated>
  <content type="html">
   A simple tool to duel with audio tag in lisp
  </content>
 </entry>
 <entry>
  <title>team4eng: Civil_3D</title>
  <author>
   <name>team4eng</name>
  </author>
  <link href="https://github.com/team4eng/Civil_3D" />
  <id>urn:rprimus:github:team4eng:Civil_3D</id>
  <published>2021-01-26T18:36:22Z</published>
  <updated>2021-01-26T18:36:22Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Perivitta: LISP_Programming</title>
  <author>
   <name>Perivitta</name>
  </author>
  <link href="https://github.com/Perivitta/LISP_Programming" />
  <id>urn:rprimus:github:Perivitta:LISP_Programming</id>
  <published>2021-01-26T15:49:12Z</published>
  <updated>2021-01-26T15:49:12Z</updated>
  <content type="html">
   Artificial Intelligence Project 
  </content>
 </entry>
 <entry>
  <title>IAmRasputin: cl-getpass</title>
  <author>
   <name>IAmRasputin</name>
  </author>
  <link href="https://github.com/IAmRasputin/cl-getpass" />
  <id>urn:rprimus:github:IAmRasputin:cl-getpass</id>
  <published>2021-01-26T14:28:32Z</published>
  <updated>2021-01-26T14:28:32Z</updated>
  <content type="html">
   Read secret strings from POSIX terminals with Common Lisp
  </content>
 </entry>
 <entry>
  <title>veer66: amphi</title>
  <author>
   <name>veer66</name>
  </author>
  <link href="https://github.com/veer66/amphi" />
  <id>urn:rprimus:github:veer66:amphi</id>
  <published>2021-01-26T02:42:09Z</published>
  <updated>2021-01-26T02:42:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rrrkr: echo_server</title>
  <author>
   <name>rrrkr</name>
  </author>
  <link href="https://github.com/rrrkr/echo_server" />
  <id>urn:rprimus:github:rrrkr:echo_server</id>
  <published>2021-01-26T02:19:46Z</published>
  <updated>2021-01-26T02:19:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rrrkr: create_htmltag</title>
  <author>
   <name>rrrkr</name>
  </author>
  <link href="https://github.com/rrrkr/create_htmltag" />
  <id>urn:rprimus:github:rrrkr:create_htmltag</id>
  <published>2021-01-26T01:27:00Z</published>
  <updated>2021-01-26T01:27:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>fmgflavio: paradigmasdeprogramacao</title>
  <author>
   <name>fmgflavio</name>
  </author>
  <link href="https://github.com/fmgflavio/paradigmasdeprogramacao" />
  <id>urn:rprimus:github:fmgflavio:paradigmasdeprogramacao</id>
  <published>2021-01-26T00:47:36Z</published>
  <updated>2021-01-26T00:47:36Z</updated>
  <content type="html">
   ResoluÃ§Ã£o de trÃªs problemas clÃ¡ssicos: Oito Rainhas, Quebra cabeÃ§a de oito e O macaco e a banana em 4 diferentes paradigmas de programaÃ§Ã£o.
  </content>
 </entry>
 <entry>
  <title>Hexstream: enhanced-defclass</title>
  <author>
   <name>Hexstream</name>
  </author>
  <link href="https://github.com/Hexstream/enhanced-defclass" />
  <id>urn:rprimus:github:Hexstream:enhanced-defclass</id>
  <published>2021-01-26T00:37:52Z</published>
  <updated>2021-01-26T00:37:52Z</updated>
  <content type="html">
   Provides a truly extensible version of DEFCLASS that can accurately control the expansion according to the metaclass and automatically detect the suitable metaclass by analyzing the DEFCLASS form.
  </content>
 </entry>
</feed>
