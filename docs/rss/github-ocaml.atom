<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2020-04-16T01:17:01Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>calsaviour: ocaml_practise</title>
  <author>
   <name>calsaviour</name>
  </author>
  <link href="https://github.com/calsaviour/ocaml_practise" />
  <id>urn:rprimus:github:calsaviour:ocaml_practise</id>
  <published>2020-04-16T01:17:01Z</published>
  <updated>2020-04-16T01:17:01Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>AkihisaYamada: natt</title>
  <author>
   <name>AkihisaYamada</name>
  </author>
  <link href="https://github.com/AkihisaYamada/natt" />
  <id>urn:rprimus:github:AkihisaYamada:natt</id>
  <published>2020-04-16T00:36:10Z</published>
  <updated>2020-04-16T00:36:10Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ETYates: ocs-gen</title>
  <author>
   <name>ETYates</name>
  </author>
  <link href="https://github.com/ETYates/ocs-gen" />
  <id>urn:rprimus:github:ETYates:ocs-gen</id>
  <published>2020-04-15T18:09:12Z</published>
  <updated>2020-04-15T18:09:12Z</updated>
  <content type="html">
   Old Church Slavonic Inflectional Morphology
  </content>
 </entry>
 <entry>
  <title>nicokla: Prepa_Ocaml</title>
  <author>
   <name>nicokla</name>
  </author>
  <link href="https://github.com/nicokla/Prepa_Ocaml" />
  <id>urn:rprimus:github:nicokla:Prepa_Ocaml</id>
  <published>2020-04-15T17:57:59Z</published>
  <updated>2020-04-15T17:57:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>diml: dune-files</title>
  <author>
   <name>diml</name>
  </author>
  <link href="https://github.com/diml/dune-files" />
  <id>urn:rprimus:github:diml:dune-files</id>
  <published>2020-04-15T15:51:54Z</published>
  <updated>2020-04-15T15:51:54Z</updated>
  <content type="html">
   Toolbox for reading and editing dune files
  </content>
 </entry>
 <entry>
  <title>manoj2601: Programming-Languages-Assignments</title>
  <author>
   <name>manoj2601</name>
  </author>
  <link href="https://github.com/manoj2601/Programming-Languages-Assignments" />
  <id>urn:rprimus:github:manoj2601:Programming-Languages-Assignments</id>
  <published>2020-04-15T11:26:40Z</published>
  <updated>2020-04-15T11:26:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>shubhamkumar13: task-pool-experiments</title>
  <author>
   <name>shubhamkumar13</name>
  </author>
  <link href="https://github.com/shubhamkumar13/task-pool-experiments" />
  <id>urn:rprimus:github:shubhamkumar13:task-pool-experiments</id>
  <published>2020-04-15T10:37:07Z</published>
  <updated>2020-04-15T10:37:07Z</updated>
  <content type="html">
   experimenting with multicore ocaml 
  </content>
 </entry>
 <entry>
  <title>lilybrevec: Quoridor-OCaml</title>
  <author>
   <name>lilybrevec</name>
  </author>
  <link href="https://github.com/lilybrevec/Quoridor-OCaml" />
  <id>urn:rprimus:github:lilybrevec:Quoridor-OCaml</id>
  <published>2020-04-15T10:08:09Z</published>
  <updated>2020-04-15T10:08:09Z</updated>
  <content type="html">
   Quoridor written in OCaml
  </content>
 </entry>
 <entry>
  <title>Firobe: Ur</title>
  <author>
   <name>Firobe</name>
  </author>
  <link href="https://github.com/Firobe/Ur" />
  <id>urn:rprimus:github:Firobe:Ur</id>
  <published>2020-04-15T07:49:46Z</published>
  <updated>2020-04-15T07:49:46Z</updated>
  <content type="html">
   Quick and minimal implementation of the Royal Game of Ur with OCaml and Graphics
  </content>
 </entry>
 <entry>
  <title>chetmurthy: pa_ppx</title>
  <author>
   <name>chetmurthy</name>
  </author>
  <link href="https://github.com/chetmurthy/pa_ppx" />
  <id>urn:rprimus:github:chetmurthy:pa_ppx</id>
  <published>2020-04-14T21:32:57Z</published>
  <updated>2020-04-14T21:32:57Z</updated>
  <content type="html">
   Implementation of PPX rewriters using camlp5 infrastructure
  </content>
 </entry>
 <entry>
  <title>deluca99emanuele: Functional-programming</title>
  <author>
   <name>deluca99emanuele</name>
  </author>
  <link href="https://github.com/deluca99emanuele/Functional-programming" />
  <id>urn:rprimus:github:deluca99emanuele:Functional-programming</id>
  <published>2020-04-14T20:13:10Z</published>
  <updated>2020-04-14T20:13:10Z</updated>
  <content type="html">
   programmazione funzionale in Caml Light, OCaml
  </content>
 </entry>
 <entry>
  <title>Ninjapouet: slurp</title>
  <author>
   <name>Ninjapouet</name>
  </author>
  <link href="https://github.com/Ninjapouet/slurp" />
  <id>urn:rprimus:github:Ninjapouet:slurp</id>
  <published>2020-04-14T12:30:15Z</published>
  <updated>2020-04-14T12:30:15Z</updated>
  <content type="html">
   Sinatra Like URL Route Processing.
  </content>
 </entry>
 <entry>
  <title>forked-from-1kasper: tt</title>
  <author>
   <name>forked-from-1kasper</name>
  </author>
  <link href="https://github.com/forked-from-1kasper/tt" />
  <id>urn:rprimus:github:forked-from-1kasper:tt</id>
  <published>2020-04-14T06:39:49Z</published>
  <updated>2020-04-14T06:39:49Z</updated>
  <content type="html">
   Type checker based on Mini-TT
  </content>
 </entry>
 <entry>
  <title>cookieli: Lambda_interpreter</title>
  <author>
   <name>cookieli</name>
  </author>
  <link href="https://github.com/cookieli/Lambda_interpreter" />
  <id>urn:rprimus:github:cookieli:Lambda_interpreter</id>
  <published>2020-04-14T02:19:54Z</published>
  <updated>2020-04-14T02:19:54Z</updated>
  <content type="html">
   Write a lambda interpreter in Ocaml
  </content>
 </entry>
</feed>
