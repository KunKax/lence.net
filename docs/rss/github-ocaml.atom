<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2020-10-29T04:11:55Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>aarunishsinha: Pre-terms</title>
  <author>
   <name>aarunishsinha</name>
  </author>
  <link href="https://github.com/aarunishsinha/Pre-terms" />
  <id>urn:rprimus:github:aarunishsinha:Pre-terms</id>
  <published>2020-10-29T04:11:55Z</published>
  <updated>2020-10-29T04:11:55Z</updated>
  <content type="html">
   COL226 - Programming Languages
  </content>
 </entry>
 <entry>
  <title>blaquez: merge-fmt</title>
  <author>
   <name>blaquez</name>
  </author>
  <link href="https://github.com/blaquez/merge-fmt" />
  <id>urn:rprimus:github:blaquez:merge-fmt</id>
  <published>2020-10-29T02:14:30Z</published>
  <updated>2020-10-29T02:14:30Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>sebferre: sparklis</title>
  <author>
   <name>sebferre</name>
  </author>
  <link href="https://github.com/sebferre/sparklis" />
  <id>urn:rprimus:github:sebferre:sparklis</id>
  <published>2020-10-28T14:05:30Z</published>
  <updated>2020-10-28T14:05:30Z</updated>
  <content type="html">
   Sparklis is a query builder in natural language that allows people to explore and query SPARQL endpoints with all the power of SPARQL and without any knowledge of SPARQL.
  </content>
 </entry>
 <entry>
  <title>blaquez: bitmasks</title>
  <author>
   <name>blaquez</name>
  </author>
  <link href="https://github.com/blaquez/bitmasks" />
  <id>urn:rprimus:github:blaquez:bitmasks</id>
  <published>2020-10-28T13:45:56Z</published>
  <updated>2020-10-28T13:45:56Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>oxidizing: sihl-demo</title>
  <author>
   <name>oxidizing</name>
  </author>
  <link href="https://github.com/oxidizing/sihl-demo" />
  <id>urn:rprimus:github:oxidizing:sihl-demo</id>
  <published>2020-10-28T09:22:13Z</published>
  <updated>2020-10-28T09:22:13Z</updated>
  <content type="html">
   A small demo application written with Sihl
  </content>
 </entry>
 <entry>
  <title>wlharvey4: ocaml-compilation-example</title>
  <author>
   <name>wlharvey4</name>
  </author>
  <link href="https://github.com/wlharvey4/ocaml-compilation-example" />
  <id>urn:rprimus:github:wlharvey4:ocaml-compilation-example</id>
  <published>2020-10-28T03:52:07Z</published>
  <updated>2020-10-28T03:52:07Z</updated>
  <content type="html">
   Worked through a few different ways to compile a simple ocaml project using the compiler, ocamlfind, and ocamlbuild.
  </content>
 </entry>
 <entry>
  <title>jacobrec: jchess</title>
  <author>
   <name>jacobrec</name>
  </author>
  <link href="https://github.com/jacobrec/jchess" />
  <id>urn:rprimus:github:jacobrec:jchess</id>
  <published>2020-10-28T01:06:00Z</published>
  <updated>2020-10-28T01:06:00Z</updated>
  <content type="html">
   A command line chess in ocaml
  </content>
 </entry>
 <entry>
  <title>camlp5: pa_ppx_ag</title>
  <author>
   <name>camlp5</name>
  </author>
  <link href="https://github.com/camlp5/pa_ppx_ag" />
  <id>urn:rprimus:github:camlp5:pa_ppx_ag</id>
  <published>2020-10-27T23:18:05Z</published>
  <updated>2020-10-27T23:18:05Z</updated>
  <content type="html">
   A PPX Rewriter to Generate Attribute Grammar Evaulators
  </content>
 </entry>
 <entry>
  <title>ItacosI: M1-Compilation</title>
  <author>
   <name>ItacosI</name>
  </author>
  <link href="https://github.com/ItacosI/M1-Compilation" />
  <id>urn:rprimus:github:ItacosI:M1-Compilation</id>
  <published>2020-10-27T22:55:43Z</published>
  <updated>2020-10-27T22:55:43Z</updated>
  <content type="html">
   Paris-Saclay University M1 Computer Science Work for the course &quot;Compilation&quot; provided by Professor Thibaut Balabonski
  </content>
 </entry>
 <entry>
  <title>blaquez: tlapm</title>
  <author>
   <name>blaquez</name>
  </author>
  <link href="https://github.com/blaquez/tlapm" />
  <id>urn:rprimus:github:blaquez:tlapm</id>
  <published>2020-10-27T17:29:33Z</published>
  <updated>2020-10-27T17:29:33Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>samoht: vendors-test</title>
  <author>
   <name>samoht</name>
  </author>
  <link href="https://github.com/samoht/vendors-test" />
  <id>urn:rprimus:github:samoht:vendors-test</id>
  <published>2020-10-27T15:37:54Z</published>
  <updated>2020-10-27T15:37:54Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>bpmf24: Compiler-Principles-2020-Fall</title>
  <author>
   <name>bpmf24</name>
  </author>
  <link href="https://github.com/bpmf24/Compiler-Principles-2020-Fall" />
  <id>urn:rprimus:github:bpmf24:Compiler-Principles-2020-Fall</id>
  <published>2020-10-27T11:51:47Z</published>
  <updated>2020-10-27T11:51:47Z</updated>
  <content type="html">
   Implementation of a Chez Scheme using Ocaml and xv86 assembly compiler, and all of the stages required to build it.
  </content>
 </entry>
 <entry>
  <title>CraigFe: semaphore-compat</title>
  <author>
   <name>CraigFe</name>
  </author>
  <link href="https://github.com/CraigFe/semaphore-compat" />
  <id>urn:rprimus:github:CraigFe:semaphore-compat</id>
  <published>2020-10-27T11:00:41Z</published>
  <updated>2020-10-27T11:00:41Z</updated>
  <content type="html">
   Compatibility Semaphore module for OCaml.
  </content>
 </entry>
 <entry>
  <title>saharvaya: ChezScheme-Compiler</title>
  <author>
   <name>saharvaya</name>
  </author>
  <link href="https://github.com/saharvaya/ChezScheme-Compiler" />
  <id>urn:rprimus:github:saharvaya:ChezScheme-Compiler</id>
  <published>2020-10-27T10:46:24Z</published>
  <updated>2020-10-27T10:46:24Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ryanluk4: todolist</title>
  <author>
   <name>ryanluk4</name>
  </author>
  <link href="https://github.com/ryanluk4/todolist" />
  <id>urn:rprimus:github:ryanluk4:todolist</id>
  <published>2020-10-27T08:37:49Z</published>
  <updated>2020-10-27T08:37:49Z</updated>
  <content type="html">
   To-do list in OCaml connecting to PostgreSQL.
  </content>
 </entry>
 <entry>
  <title>JonathanDLTran: Lambda-Calculus-Interpreter</title>
  <author>
   <name>JonathanDLTran</name>
  </author>
  <link href="https://github.com/JonathanDLTran/Lambda-Calculus-Interpreter" />
  <id>urn:rprimus:github:JonathanDLTran:Lambda-Calculus-Interpreter</id>
  <published>2020-10-27T05:43:40Z</published>
  <updated>2020-10-27T05:43:40Z</updated>
  <content type="html">
   Lambda Calculus Intepreter, an application of CS 4110 studies
  </content>
 </entry>
 <entry>
  <title>Cutii: ocaml-frogger</title>
  <author>
   <name>Cutii</name>
  </author>
  <link href="https://github.com/Cutii/ocaml-frogger" />
  <id>urn:rprimus:github:Cutii:ocaml-frogger</id>
  <published>2020-10-27T01:42:09Z</published>
  <updated>2020-10-27T01:42:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>zajer: trs-policy-demo</title>
  <author>
   <name>zajer</name>
  </author>
  <link href="https://github.com/zajer/trs-policy-demo" />
  <id>urn:rprimus:github:zajer:trs-policy-demo</id>
  <published>2020-10-27T01:15:17Z</published>
  <updated>2020-10-27T01:15:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
