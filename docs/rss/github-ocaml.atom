<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2020-05-21T14:57:09Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>mattbodd: OCAMpiler</title>
  <author>
   <name>mattbodd</name>
  </author>
  <link href="https://github.com/mattbodd/OCAMpiler" />
  <id>urn:rprimus:github:mattbodd:OCAMpiler</id>
  <published>2020-05-21T14:57:09Z</published>
  <updated>2020-05-21T14:57:09Z</updated>
  <content type="html">
   A made-from-scratch compiler written in OCaml, guided by &quot;Compilers Principles, Techniques, &amp; Tools (v2)&quot;
  </content>
 </entry>
 <entry>
  <title>thierry-martinez: ppx_show</title>
  <author>
   <name>thierry-martinez</name>
  </author>
  <link href="https://github.com/thierry-martinez/ppx_show" />
  <id>urn:rprimus:github:thierry-martinez:ppx_show</id>
  <published>2020-05-21T14:41:12Z</published>
  <updated>2020-05-21T14:41:12Z</updated>
  <content type="html">
   OCaml PPX deriver for deriving show based on ppxlib
  </content>
 </entry>
 <entry>
  <title>songyahui: TimedVerification</title>
  <author>
   <name>songyahui</name>
  </author>
  <link href="https://github.com/songyahui/TimedVerification" />
  <id>urn:rprimus:github:songyahui:TimedVerification</id>
  <published>2020-05-21T08:50:29Z</published>
  <updated>2020-05-21T08:50:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>AhmedBoumekla: serveur-ocaml</title>
  <author>
   <name>AhmedBoumekla</name>
  </author>
  <link href="https://github.com/AhmedBoumekla/serveur-ocaml" />
  <id>urn:rprimus:github:AhmedBoumekla:serveur-ocaml</id>
  <published>2020-05-20T21:15:29Z</published>
  <updated>2020-05-20T21:15:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>AhmedBoumekla: solveur-booleen</title>
  <author>
   <name>AhmedBoumekla</name>
  </author>
  <link href="https://github.com/AhmedBoumekla/solveur-booleen" />
  <id>urn:rprimus:github:AhmedBoumekla:solveur-booleen</id>
  <published>2020-05-20T20:46:10Z</published>
  <updated>2020-05-20T20:46:10Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>natalieisak: Database_Management_System</title>
  <author>
   <name>natalieisak</name>
  </author>
  <link href="https://github.com/natalieisak/Database_Management_System" />
  <id>urn:rprimus:github:natalieisak:Database_Management_System</id>
  <published>2020-05-20T14:34:30Z</published>
  <updated>2020-05-20T14:34:30Z</updated>
  <content type="html">
   A database management system implemented in Ocaml
  </content>
 </entry>
 <entry>
  <title>jeremiedimino: mlspot</title>
  <author>
   <name>jeremiedimino</name>
  </author>
  <link href="https://github.com/jeremiedimino/mlspot" />
  <id>urn:rprimus:github:jeremiedimino:mlspot</id>
  <published>2020-05-20T13:31:10Z</published>
  <updated>2020-05-20T13:31:10Z</updated>
  <content type="html">
   OCaml implementation of the Spotify protocol
  </content>
 </entry>
 <entry>
  <title>jeremiedimino: ocaml-spotify</title>
  <author>
   <name>jeremiedimino</name>
  </author>
  <link href="https://github.com/jeremiedimino/ocaml-spotify" />
  <id>urn:rprimus:github:jeremiedimino:ocaml-spotify</id>
  <published>2020-05-20T13:04:10Z</published>
  <updated>2020-05-20T13:04:10Z</updated>
  <content type="html">
   OCaml bindings for the Spotify library
  </content>
 </entry>
 <entry>
  <title>gtrak: understanding_computation_book</title>
  <author>
   <name>gtrak</name>
  </author>
  <link href="https://github.com/gtrak/understanding_computation_book" />
  <id>urn:rprimus:github:gtrak:understanding_computation_book</id>
  <published>2020-05-20T10:18:24Z</published>
  <updated>2020-05-20T10:18:24Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>msnassim: netcaml</title>
  <author>
   <name>msnassim</name>
  </author>
  <link href="https://github.com/msnassim/netcaml" />
  <id>urn:rprimus:github:msnassim:netcaml</id>
  <published>2020-05-20T10:03:50Z</published>
  <updated>2020-05-20T10:03:50Z</updated>
  <content type="html">
   server/client(s) quiz game made using lwt library in ocaml (School Homework)
  </content>
 </entry>
 <entry>
  <title>msnassim: sat-solver-caml</title>
  <author>
   <name>msnassim</name>
  </author>
  <link href="https://github.com/msnassim/sat-solver-caml" />
  <id>urn:rprimus:github:msnassim:sat-solver-caml</id>
  <published>2020-05-20T09:29:55Z</published>
  <updated>2020-05-20T09:29:55Z</updated>
  <content type="html">
   a SAT solver written in ocaml
  </content>
 </entry>
 <entry>
  <title>pdarragh: parsing-with-zippers-paper-artifact</title>
  <author>
   <name>pdarragh</name>
  </author>
  <link href="https://github.com/pdarragh/parsing-with-zippers-paper-artifact" />
  <id>urn:rprimus:github:pdarragh:parsing-with-zippers-paper-artifact</id>
  <published>2020-05-19T18:22:41Z</published>
  <updated>2020-05-19T18:22:41Z</updated>
  <content type="html">
   The artifact associated with &quot;Parsing with Zippers (Functional Pearl)&quot; (Darragh and Adams) to appear in ICFP 2020.
  </content>
 </entry>
 <entry>
  <title>Yuzuki-sh: Prolog--compiler</title>
  <author>
   <name>Yuzuki-sh</name>
  </author>
  <link href="https://github.com/Yuzuki-sh/Prolog--compiler" />
  <id>urn:rprimus:github:Yuzuki-sh:Prolog--compiler</id>
  <published>2020-05-19T16:26:22Z</published>
  <updated>2020-05-19T16:26:22Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>SquidDev: ocaml-lsp-subtree</title>
  <author>
   <name>SquidDev</name>
  </author>
  <link href="https://github.com/SquidDev/ocaml-lsp-subtree" />
  <id>urn:rprimus:github:SquidDev:ocaml-lsp-subtree</id>
  <published>2020-05-19T15:08:50Z</published>
  <updated>2020-05-19T15:08:50Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jucatamo: mlCyphers</title>
  <author>
   <name>jucatamo</name>
  </author>
  <link href="https://github.com/jucatamo/mlCyphers" />
  <id>urn:rprimus:github:jucatamo:mlCyphers</id>
  <published>2020-05-19T14:51:42Z</published>
  <updated>2020-05-19T14:51:42Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Khady: ocaml-raytracing</title>
  <author>
   <name>Khady</name>
  </author>
  <link href="https://github.com/Khady/ocaml-raytracing" />
  <id>urn:rprimus:github:Khady:ocaml-raytracing</id>
  <published>2020-05-19T14:36:02Z</published>
  <updated>2020-05-19T14:36:02Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Naturalclar: ray-tracing-ocaml</title>
  <author>
   <name>Naturalclar</name>
  </author>
  <link href="https://github.com/Naturalclar/ray-tracing-ocaml" />
  <id>urn:rprimus:github:Naturalclar:ray-tracing-ocaml</id>
  <published>2020-05-19T12:45:42Z</published>
  <updated>2020-05-19T12:45:42Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kenichi-asai: remove-sharpuse</title>
  <author>
   <name>kenichi-asai</name>
  </author>
  <link href="https://github.com/kenichi-asai/remove-sharpuse" />
  <id>urn:rprimus:github:kenichi-asai:remove-sharpuse</id>
  <published>2020-05-19T09:09:01Z</published>
  <updated>2020-05-19T09:09:01Z</updated>
  <content type="html">
   A utility to expand all uses of #use in an OCaml program
  </content>
 </entry>
 <entry>
  <title>Khady: modern-ocaml</title>
  <author>
   <name>Khady</name>
  </author>
  <link href="https://github.com/Khady/modern-ocaml" />
  <id>urn:rprimus:github:Khady:modern-ocaml</id>
  <published>2020-05-19T07:25:15Z</published>
  <updated>2020-05-19T07:25:15Z</updated>
  <content type="html">
   Template for an ocaml project with modern tooling
  </content>
 </entry>
</feed>
