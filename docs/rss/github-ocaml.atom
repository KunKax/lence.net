<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2020-08-22T02:22:36Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>dustinvonsandwich: KECCAK-ocaml</title>
  <author>
   <name>dustinvonsandwich</name>
  </author>
  <link href="https://github.com/dustinvonsandwich/KECCAK-ocaml" />
  <id>urn:rprimus:github:dustinvonsandwich:KECCAK-ocaml</id>
  <published>2020-08-22T02:22:36Z</published>
  <updated>2020-08-22T02:22:36Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>spulapura: Thesis</title>
  <author>
   <name>spulapura</name>
  </author>
  <link href="https://github.com/spulapura/Thesis" />
  <id>urn:rprimus:github:spulapura:Thesis</id>
  <published>2020-08-21T20:28:23Z</published>
  <updated>2020-08-21T20:28:23Z</updated>
  <content type="html">
   An Implementation of Filler-Gap Constructions Using the Tree-Adjoining Grammar Formalism
  </content>
 </entry>
 <entry>
  <title>ocurrent: current-bench</title>
  <author>
   <name>ocurrent</name>
  </author>
  <link href="https://github.com/ocurrent/current-bench" />
  <id>urn:rprimus:github:ocurrent:current-bench</id>
  <published>2020-08-21T17:35:53Z</published>
  <updated>2020-08-21T17:35:53Z</updated>
  <content type="html">
   Experimental benchmarking infrastructure using OCurrent pipelines
  </content>
 </entry>
 <entry>
  <title>shreyathotapally: SmallC-Interpreter-Evaluator</title>
  <author>
   <name>shreyathotapally</name>
  </author>
  <link href="https://github.com/shreyathotapally/SmallC-Interpreter-Evaluator" />
  <id>urn:rprimus:github:shreyathotapally:SmallC-Interpreter-Evaluator</id>
  <published>2020-08-21T04:56:58Z</published>
  <updated>2020-08-21T04:56:58Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Vertalo: ligo</title>
  <author>
   <name>Vertalo</name>
  </author>
  <link href="https://github.com/Vertalo/ligo" />
  <id>urn:rprimus:github:Vertalo:ligo</id>
  <published>2020-08-21T02:56:29Z</published>
  <updated>2020-08-21T02:56:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rand00: bornhack2020-badge_generative-animations</title>
  <author>
   <name>rand00</name>
  </author>
  <link href="https://github.com/rand00/bornhack2020-badge_generative-animations" />
  <id>urn:rprimus:github:rand00:bornhack2020-badge_generative-animations</id>
  <published>2020-08-20T19:52:27Z</published>
  <updated>2020-08-20T19:52:27Z</updated>
  <content type="html">
   Generative animations for the BornHack 2020 badge, pregenerated with OCaml
  </content>
 </entry>
 <entry>
  <title>Yashpandey4: COL100-Ocaml</title>
  <author>
   <name>Yashpandey4</name>
  </author>
  <link href="https://github.com/Yashpandey4/COL100-Ocaml" />
  <id>urn:rprimus:github:Yashpandey4:COL100-Ocaml</id>
  <published>2020-08-20T16:52:54Z</published>
  <updated>2020-08-20T16:52:54Z</updated>
  <content type="html">
   This repository contains course assignments of COL100 Intro to Programming in OCaml (Objective Caml) course done in 2nd Semester, 2017 - 2018
  </content>
 </entry>
 <entry>
  <title>Dmitri9149: concurrent-processes-in-join-calculus</title>
  <author>
   <name>Dmitri9149</name>
  </author>
  <link href="https://github.com/Dmitri9149/concurrent-processes-in-join-calculus" />
  <id>urn:rprimus:github:Dmitri9149:concurrent-processes-in-join-calculus</id>
  <published>2020-08-20T11:20:35Z</published>
  <updated>2020-08-20T11:20:35Z</updated>
  <content type="html">
   JoCaml language is used for coding of some concurrent processes
  </content>
 </entry>
 <entry>
  <title>Dunque: ProgParadigms</title>
  <author>
   <name>Dunque</name>
  </author>
  <link href="https://github.com/Dunque/ProgParadigms" />
  <id>urn:rprimus:github:Dunque:ProgParadigms</id>
  <published>2020-08-20T10:54:42Z</published>
  <updated>2020-08-20T10:54:42Z</updated>
  <content type="html">
   learning how to use functional languages, staarting with OCaml
  </content>
 </entry>
 <entry>
  <title>fccm: ocaml-cal-svg</title>
  <author>
   <name>fccm</name>
  </author>
  <link href="https://github.com/fccm/ocaml-cal-svg" />
  <id>urn:rprimus:github:fccm:ocaml-cal-svg</id>
  <published>2020-08-20T02:25:24Z</published>
  <updated>2020-08-20T02:25:24Z</updated>
  <content type="html">
   Generates a calendar in SVG, one month by page, that you can convert in PDF
  </content>
 </entry>
</feed>
