<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-02-26T03:04:43Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>weihanglo: resp3</title>
  <author>
   <name>weihanglo</name>
  </author>
  <link href="https://github.com/weihanglo/resp3" />
  <id>urn:rprimus:github:weihanglo:resp3</id>
  <published>2021-02-26T03:04:43Z</published>
  <updated>2021-02-26T03:04:43Z</updated>
  <content type="html">
   RESP3 parser for educational usage
  </content>
 </entry>
 <entry>
  <title>jonathan-laurent: pyml_example</title>
  <author>
   <name>jonathan-laurent</name>
  </author>
  <link href="https://github.com/jonathan-laurent/pyml_example" />
  <id>urn:rprimus:github:jonathan-laurent:pyml_example</id>
  <published>2021-02-25T22:59:59Z</published>
  <updated>2021-02-25T22:59:59Z</updated>
  <content type="html">
   An example that demonstrates how to write Python libraries in OCaml using pyml and pythonlib.
  </content>
 </entry>
 <entry>
  <title>zshipko: irmin-server</title>
  <author>
   <name>zshipko</name>
  </author>
  <link href="https://github.com/zshipko/irmin-server" />
  <id>urn:rprimus:github:zshipko:irmin-server</id>
  <published>2021-02-25T22:58:59Z</published>
  <updated>2021-02-25T22:58:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Chase-Pagon: cs4</title>
  <author>
   <name>Chase-Pagon</name>
  </author>
  <link href="https://github.com/Chase-Pagon/cs4" />
  <id>urn:rprimus:github:Chase-Pagon:cs4</id>
  <published>2021-02-25T21:35:06Z</published>
  <updated>2021-02-25T21:35:06Z</updated>
  <content type="html">
   Ocaml class
  </content>
 </entry>
 <entry>
  <title>clee22: college</title>
  <author>
   <name>clee22</name>
  </author>
  <link href="https://github.com/clee22/college" />
  <id>urn:rprimus:github:clee22:college</id>
  <published>2021-02-25T20:50:43Z</published>
  <updated>2021-02-25T20:50:43Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Novanef: BDD</title>
  <author>
   <name>Novanef</name>
  </author>
  <link href="https://github.com/Novanef/BDD" />
  <id>urn:rprimus:github:Novanef:BDD</id>
  <published>2021-02-25T16:56:03Z</published>
  <updated>2021-02-25T16:56:03Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rems-project: read-dwarf</title>
  <author>
   <name>rems-project</name>
  </author>
  <link href="https://github.com/rems-project/read-dwarf" />
  <id>urn:rprimus:github:rems-project:read-dwarf</id>
  <published>2021-02-25T09:38:41Z</published>
  <updated>2021-02-25T09:38:41Z</updated>
  <content type="html">
   Binary analysis tool
  </content>
 </entry>
 <entry>
  <title>BENSEKHRI: Solveur_booleen</title>
  <author>
   <name>BENSEKHRI</name>
  </author>
  <link href="https://github.com/BENSEKHRI/Solveur_booleen" />
  <id>urn:rprimus:github:BENSEKHRI:Solveur_booleen</id>
  <published>2021-02-25T04:12:02Z</published>
  <updated>2021-02-25T04:12:02Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>HavinLeung: ocaml_lambda_calc</title>
  <author>
   <name>HavinLeung</name>
  </author>
  <link href="https://github.com/HavinLeung/ocaml_lambda_calc" />
  <id>urn:rprimus:github:HavinLeung:ocaml_lambda_calc</id>
  <published>2021-02-25T03:22:55Z</published>
  <updated>2021-02-25T03:22:55Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>brown-cs126: lab4-stencil</title>
  <author>
   <name>brown-cs126</name>
  </author>
  <link href="https://github.com/brown-cs126/lab4-stencil" />
  <id>urn:rprimus:github:brown-cs126:lab4-stencil</id>
  <published>2021-02-24T22:38:29Z</published>
  <updated>2021-02-24T22:38:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>B-Leach: OPL</title>
  <author>
   <name>B-Leach</name>
  </author>
  <link href="https://github.com/B-Leach/OPL" />
  <id>urn:rprimus:github:B-Leach:OPL</id>
  <published>2021-02-24T19:52:30Z</published>
  <updated>2021-02-24T19:52:30Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>d4hines: wan-shi-tong</title>
  <author>
   <name>d4hines</name>
  </author>
  <link href="https://github.com/d4hines/wan-shi-tong" />
  <id>urn:rprimus:github:d4hines:wan-shi-tong</id>
  <published>2021-02-24T19:48:22Z</published>
  <updated>2021-02-24T19:48:22Z</updated>
  <content type="html">
   What if your OCaml code was a graph database?
  </content>
 </entry>
 <entry>
  <title>stevebleazard: ocaml-jsonxt</title>
  <author>
   <name>stevebleazard</name>
  </author>
  <link href="https://github.com/stevebleazard/ocaml-jsonxt" />
  <id>urn:rprimus:github:stevebleazard:ocaml-jsonxt</id>
  <published>2021-02-24T18:44:59Z</published>
  <updated>2021-02-24T18:44:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>minesweeter: ocaml-compiler</title>
  <author>
   <name>minesweeter</name>
  </author>
  <link href="https://github.com/minesweeter/ocaml-compiler" />
  <id>urn:rprimus:github:minesweeter:ocaml-compiler</id>
  <published>2021-02-24T15:25:35Z</published>
  <updated>2021-02-24T15:25:35Z</updated>
  <content type="html">
   A RAT language compiler made in OCaml.
  </content>
 </entry>
 <entry>
  <title>darrenldl: dirsift</title>
  <author>
   <name>darrenldl</name>
  </author>
  <link href="https://github.com/darrenldl/dirsift" />
  <id>urn:rprimus:github:darrenldl:dirsift</id>
  <published>2021-02-24T14:26:00Z</published>
  <updated>2021-02-24T14:26:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Ahmad-abo-alhiga: -compiler-for-Chez-Scheme</title>
  <author>
   <name>Ahmad-abo-alhiga</name>
  </author>
  <link href="https://github.com/Ahmad-abo-alhiga/-compiler-for-Chez-Scheme" />
  <id>urn:rprimus:github:Ahmad-abo-alhiga:-compiler-for-Chez-Scheme</id>
  <published>2021-02-24T14:19:16Z</published>
  <updated>2021-02-24T14:19:16Z</updated>
  <content type="html">
    compiler for Chez Scheme programming language, the Compiler written  in Ocaml, and it converts scheme code to assembly x86.
  </content>
 </entry>
 <entry>
  <title>ShoichiroKoguchi: OCaml</title>
  <author>
   <name>ShoichiroKoguchi</name>
  </author>
  <link href="https://github.com/ShoichiroKoguchi/OCaml" />
  <id>urn:rprimus:github:ShoichiroKoguchi:OCaml</id>
  <published>2021-02-24T11:35:28Z</published>
  <updated>2021-02-24T11:35:28Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>katieskim: CFlat</title>
  <author>
   <name>katieskim</name>
  </author>
  <link href="https://github.com/katieskim/CFlat" />
  <id>urn:rprimus:github:katieskim:CFlat</id>
  <published>2021-02-24T07:20:04Z</published>
  <updated>2021-02-24T07:20:04Z</updated>
  <content type="html">
   Making a Music Language!
  </content>
 </entry>
</feed>
