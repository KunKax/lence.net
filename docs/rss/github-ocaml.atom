<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2020-10-29T20:20:40Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>sammerat: lolkitty</title>
  <author>
   <name>sammerat</name>
  </author>
  <link href="https://github.com/sammerat/lolkitty" />
  <id>urn:rprimus:github:sammerat:lolkitty</id>
  <published>2020-10-29T20:20:40Z</published>
  <updated>2020-10-29T20:20:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jonsterling: effectful-typesetting</title>
  <author>
   <name>jonsterling</name>
  </author>
  <link href="https://github.com/jonsterling/effectful-typesetting" />
  <id>urn:rprimus:github:jonsterling:effectful-typesetting</id>
  <published>2020-10-29T18:03:16Z</published>
  <updated>2020-10-29T18:03:16Z</updated>
  <content type="html">
   A case-study in effects-and-handlers for bubbling out configurations from the interior of programs that typeset text.
  </content>
 </entry>
 <entry>
  <title>hyphenrf: pythagoras</title>
  <author>
   <name>hyphenrf</name>
  </author>
  <link href="https://github.com/hyphenrf/pythagoras" />
  <id>urn:rprimus:github:hyphenrf:pythagoras</id>
  <published>2020-10-29T12:41:05Z</published>
  <updated>2020-10-29T12:41:05Z</updated>
  <content type="html">
   exploring different approaches and datastructures for solving the pythagorian triples with list comprehension
  </content>
 </entry>
 <entry>
  <title>hannesm: memtrace-mirage</title>
  <author>
   <name>hannesm</name>
  </author>
  <link href="https://github.com/hannesm/memtrace-mirage" />
  <id>urn:rprimus:github:hannesm:memtrace-mirage</id>
  <published>2020-10-29T10:53:32Z</published>
  <updated>2020-10-29T10:53:32Z</updated>
  <content type="html">
   Memtrace library for MirageOS
  </content>
 </entry>
 <entry>
  <title>patricoferris: jsoo-p5</title>
  <author>
   <name>patricoferris</name>
  </author>
  <link href="https://github.com/patricoferris/jsoo-p5" />
  <id>urn:rprimus:github:patricoferris:jsoo-p5</id>
  <published>2020-10-29T08:52:04Z</published>
  <updated>2020-10-29T08:52:04Z</updated>
  <content type="html">
   Js_of_ocaml bindings for the p5.js library
  </content>
 </entry>
 <entry>
  <title>aarunishsinha: Pre-terms</title>
  <author>
   <name>aarunishsinha</name>
  </author>
  <link href="https://github.com/aarunishsinha/Pre-terms" />
  <id>urn:rprimus:github:aarunishsinha:Pre-terms</id>
  <published>2020-10-29T04:11:55Z</published>
  <updated>2020-10-29T04:11:55Z</updated>
  <content type="html">
   COL226 - Programming Languages
  </content>
 </entry>
 <entry>
  <title>sebferre: sparklis</title>
  <author>
   <name>sebferre</name>
  </author>
  <link href="https://github.com/sebferre/sparklis" />
  <id>urn:rprimus:github:sebferre:sparklis</id>
  <published>2020-10-28T14:05:30Z</published>
  <updated>2020-10-28T14:05:30Z</updated>
  <content type="html">
   Sparklis is a query builder in natural language that allows people to explore and query SPARQL endpoints with all the power of SPARQL and without any knowledge of SPARQL.
  </content>
 </entry>
 <entry>
  <title>oxidizing: sihl-demo</title>
  <author>
   <name>oxidizing</name>
  </author>
  <link href="https://github.com/oxidizing/sihl-demo" />
  <id>urn:rprimus:github:oxidizing:sihl-demo</id>
  <published>2020-10-28T09:22:13Z</published>
  <updated>2020-10-28T09:22:13Z</updated>
  <content type="html">
   A small demo application written with Sihl
  </content>
 </entry>
 <entry>
  <title>wlharvey4: ocaml-compilation-example</title>
  <author>
   <name>wlharvey4</name>
  </author>
  <link href="https://github.com/wlharvey4/ocaml-compilation-example" />
  <id>urn:rprimus:github:wlharvey4:ocaml-compilation-example</id>
  <published>2020-10-28T03:52:07Z</published>
  <updated>2020-10-28T03:52:07Z</updated>
  <content type="html">
   Worked through a few different ways to compile a simple ocaml project using the compiler, ocamlfind, and ocamlbuild.
  </content>
 </entry>
 <entry>
  <title>jacobrec: jchess</title>
  <author>
   <name>jacobrec</name>
  </author>
  <link href="https://github.com/jacobrec/jchess" />
  <id>urn:rprimus:github:jacobrec:jchess</id>
  <published>2020-10-28T01:06:00Z</published>
  <updated>2020-10-28T01:06:00Z</updated>
  <content type="html">
   A command line chess in ocaml
  </content>
 </entry>
</feed>
