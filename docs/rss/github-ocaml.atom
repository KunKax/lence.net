<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2020-08-19T07:52:51Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>Gabulhas: ocaml-calculator</title>
  <author>
   <name>Gabulhas</name>
  </author>
  <link href="https://github.com/Gabulhas/ocaml-calculator" />
  <id>urn:rprimus:github:Gabulhas:ocaml-calculator</id>
  <published>2020-08-19T07:52:51Z</published>
  <updated>2020-08-19T07:52:51Z</updated>
  <content type="html">
   calculates stuff like `(4+55)*6`
  </content>
 </entry>
 <entry>
  <title>jonathanslee4: instant-messaging-service</title>
  <author>
   <name>jonathanslee4</name>
  </author>
  <link href="https://github.com/jonathanslee4/instant-messaging-service" />
  <id>urn:rprimus:github:jonathanslee4:instant-messaging-service</id>
  <published>2020-08-18T23:11:58Z</published>
  <updated>2020-08-18T23:11:58Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>janestreet: hardcaml_fixed_point</title>
  <author>
   <name>janestreet</name>
  </author>
  <link href="https://github.com/janestreet/hardcaml_fixed_point" />
  <id>urn:rprimus:github:janestreet:hardcaml_fixed_point</id>
  <published>2020-08-18T11:56:58Z</published>
  <updated>2020-08-18T11:56:58Z</updated>
  <content type="html">
   Hardcaml fixed point arithmetic
  </content>
 </entry>
 <entry>
  <title>janestreet: hardcaml_xilinx_components</title>
  <author>
   <name>janestreet</name>
  </author>
  <link href="https://github.com/janestreet/hardcaml_xilinx_components" />
  <id>urn:rprimus:github:janestreet:hardcaml_xilinx_components</id>
  <published>2020-08-18T11:56:51Z</published>
  <updated>2020-08-18T11:56:51Z</updated>
  <content type="html">
   Hardcaml Xilinx component definitions
  </content>
 </entry>
 <entry>
  <title>janestreet: hardcaml_verilator</title>
  <author>
   <name>janestreet</name>
  </author>
  <link href="https://github.com/janestreet/hardcaml_verilator" />
  <id>urn:rprimus:github:janestreet:hardcaml_verilator</id>
  <published>2020-08-18T11:56:45Z</published>
  <updated>2020-08-18T11:56:45Z</updated>
  <content type="html">
   Hardcaml Verilator Simulation Backend
  </content>
 </entry>
 <entry>
  <title>janestreet: hardcaml_of_verilog</title>
  <author>
   <name>janestreet</name>
  </author>
  <link href="https://github.com/janestreet/hardcaml_of_verilog" />
  <id>urn:rprimus:github:janestreet:hardcaml_of_verilog</id>
  <published>2020-08-18T11:56:34Z</published>
  <updated>2020-08-18T11:56:34Z</updated>
  <content type="html">
   Convert Verilog to a Hardcaml design
  </content>
 </entry>
 <entry>
  <title>janestreet: hardcaml_circuits</title>
  <author>
   <name>janestreet</name>
  </author>
  <link href="https://github.com/janestreet/hardcaml_circuits" />
  <id>urn:rprimus:github:janestreet:hardcaml_circuits</id>
  <published>2020-08-18T11:56:27Z</published>
  <updated>2020-08-18T11:56:27Z</updated>
  <content type="html">
   Hardcaml Circuits
  </content>
 </entry>
 <entry>
  <title>janestreet: hardcaml_xilinx</title>
  <author>
   <name>janestreet</name>
  </author>
  <link href="https://github.com/janestreet/hardcaml_xilinx" />
  <id>urn:rprimus:github:janestreet:hardcaml_xilinx</id>
  <published>2020-08-18T11:56:19Z</published>
  <updated>2020-08-18T11:56:19Z</updated>
  <content type="html">
   Hardcaml wrappers for Xilinx memory primitives
  </content>
 </entry>
 <entry>
  <title>janestreet: hardcaml_c</title>
  <author>
   <name>janestreet</name>
  </author>
  <link href="https://github.com/janestreet/hardcaml_c" />
  <id>urn:rprimus:github:janestreet:hardcaml_c</id>
  <published>2020-08-18T11:56:12Z</published>
  <updated>2020-08-18T11:56:12Z</updated>
  <content type="html">
   Hardcaml C Simulation Backend
  </content>
 </entry>
 <entry>
  <title>janestreet: hardcaml_step_testbench</title>
  <author>
   <name>janestreet</name>
  </author>
  <link href="https://github.com/janestreet/hardcaml_step_testbench" />
  <id>urn:rprimus:github:janestreet:hardcaml_step_testbench</id>
  <published>2020-08-18T11:56:04Z</published>
  <updated>2020-08-18T11:56:04Z</updated>
  <content type="html">
   Hardcaml Testbench Monad
  </content>
 </entry>
 <entry>
  <title>hongchangwu: ocaml-repl</title>
  <author>
   <name>hongchangwu</name>
  </author>
  <link href="https://github.com/hongchangwu/ocaml-repl" />
  <id>urn:rprimus:github:hongchangwu:ocaml-repl</id>
  <published>2020-08-18T04:14:51Z</published>
  <updated>2020-08-18T04:14:51Z</updated>
  <content type="html">
   A minimal REPL for OCaml
  </content>
 </entry>
 <entry>
  <title>mbardwell: ocaml</title>
  <author>
   <name>mbardwell</name>
  </author>
  <link href="https://github.com/mbardwell/ocaml" />
  <id>urn:rprimus:github:mbardwell:ocaml</id>
  <published>2020-08-17T20:15:11Z</published>
  <updated>2020-08-17T20:15:11Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>oxidizing: sihl-minimal-starter</title>
  <author>
   <name>oxidizing</name>
  </author>
  <link href="https://github.com/oxidizing/sihl-minimal-starter" />
  <id>urn:rprimus:github:oxidizing:sihl-minimal-starter</id>
  <published>2020-08-17T16:31:25Z</published>
  <updated>2020-08-17T16:31:25Z</updated>
  <content type="html">
   This is a repo that cen be cloned to get started quickly with Sihl.
  </content>
 </entry>
 <entry>
  <title>yagofdezblanco: OCaml</title>
  <author>
   <name>yagofdezblanco</name>
  </author>
  <link href="https://github.com/yagofdezblanco/OCaml" />
  <id>urn:rprimus:github:yagofdezblanco:OCaml</id>
  <published>2020-08-17T15:20:16Z</published>
  <updated>2020-08-17T15:20:16Z</updated>
  <content type="html">
   Paradigmas de programaciÃ³n
  </content>
 </entry>
 <entry>
  <title>myarchsource: ocaml</title>
  <author>
   <name>myarchsource</name>
  </author>
  <link href="https://github.com/myarchsource/ocaml" />
  <id>urn:rprimus:github:myarchsource:ocaml</id>
  <published>2020-08-17T06:18:13Z</published>
  <updated>2020-08-17T06:18:13Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jamesliudotcc: discrete-math-and-func-prog</title>
  <author>
   <name>jamesliudotcc</name>
  </author>
  <link href="https://github.com/jamesliudotcc/discrete-math-and-func-prog" />
  <id>urn:rprimus:github:jamesliudotcc:discrete-math-and-func-prog</id>
  <published>2020-08-17T02:24:23Z</published>
  <updated>2020-08-17T02:24:23Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>swordJJ: compile-alice-bob-notation-into-murphi</title>
  <author>
   <name>swordJJ</name>
  </author>
  <link href="https://github.com/swordJJ/compile-alice-bob-notation-into-murphi" />
  <id>urn:rprimus:github:swordJJ:compile-alice-bob-notation-into-murphi</id>
  <published>2020-08-17T01:49:12Z</published>
  <updated>2020-08-17T01:49:12Z</updated>
  <content type="html">
   high level alice&amp;bob notation change into formal tools murphi
  </content>
 </entry>
</feed>
