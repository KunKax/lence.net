<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2020-07-23T03:43:30Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>brunomspereira: How-many-rides</title>
  <author>
   <name>brunomspereira</name>
  </author>
  <link href="https://github.com/brunomspereira/How-many-rides" />
  <id>urn:rprimus:github:brunomspereira:How-many-rides</id>
  <published>2020-07-23T03:43:30Z</published>
  <updated>2020-07-23T03:43:30Z</updated>
  <content type="html">
   Code in ocaml that given the size of a chess board and the position of the knight, it calculates how many greeting paths can the knight take.
  </content>
 </entry>
 <entry>
  <title>autopqc: autopqc</title>
  <author>
   <name>autopqc</name>
  </author>
  <link href="https://github.com/autopqc/autopqc" />
  <id>urn:rprimus:github:autopqc:autopqc</id>
  <published>2020-07-23T03:00:05Z</published>
  <updated>2020-07-23T03:00:05Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>brunomspereira: From-the-automatons-to-the-regular-expressions</title>
  <author>
   <name>brunomspereira</name>
  </author>
  <link href="https://github.com/brunomspereira/From-the-automatons-to-the-regular-expressions" />
  <id>urn:rprimus:github:brunomspereira:From-the-automatons-to-the-regular-expressions</id>
  <published>2020-07-23T02:47:42Z</published>
  <updated>2020-07-23T02:47:42Z</updated>
  <content type="html">
   Code in ocaml that receives an automaton and it turns it to a regular expression using MacNaughton-Yamada algorithm.
  </content>
 </entry>
 <entry>
  <title>brunomspereira: Largest-common-contiguous-subsequences-between-two-branches-of-DNA</title>
  <author>
   <name>brunomspereira</name>
  </author>
  <link href="https://github.com/brunomspereira/Largest-common-contiguous-subsequences-between-two-branches-of-DNA" />
  <id>urn:rprimus:github:brunomspereira:Largest-common-contiguous-subsequences-between-two-branches-of-DNA</id>
  <published>2020-07-23T01:55:56Z</published>
  <updated>2020-07-23T01:55:56Z</updated>
  <content type="html">
   Code in ocaml that calculate the size of the largest contiguous sub-segments of two given DNA branches.
  </content>
 </entry>
 <entry>
  <title>brunomspereira: Distance-between-two-branches-of-DNA</title>
  <author>
   <name>brunomspereira</name>
  </author>
  <link href="https://github.com/brunomspereira/Distance-between-two-branches-of-DNA" />
  <id>urn:rprimus:github:brunomspereira:Distance-between-two-branches-of-DNA</id>
  <published>2020-07-23T01:01:55Z</published>
  <updated>2020-07-23T01:01:55Z</updated>
  <content type="html">
   Code in ocaml that calculates the distance between two given DNA branches.
  </content>
 </entry>
 <entry>
  <title>brunomspereira: Null-First-and-Follow-sets</title>
  <author>
   <name>brunomspereira</name>
  </author>
  <link href="https://github.com/brunomspereira/Null-First-and-Follow-sets" />
  <id>urn:rprimus:github:brunomspereira:Null-First-and-Follow-sets</id>
  <published>2020-07-23T00:56:04Z</published>
  <updated>2020-07-23T00:56:04Z</updated>
  <content type="html">
   Code in ocaml that calculate the NULL, First and Follow sets of a given grammar.
  </content>
 </entry>
 <entry>
  <title>mr-mattwb: ocamlipc</title>
  <author>
   <name>mr-mattwb</name>
  </author>
  <link href="https://github.com/mr-mattwb/ocamlipc" />
  <id>urn:rprimus:github:mr-mattwb:ocamlipc</id>
  <published>2020-07-22T18:12:37Z</published>
  <updated>2020-07-22T18:12:37Z</updated>
  <content type="html">
   OCaml bindings for Unix/Linux IPC functions
  </content>
 </entry>
 <entry>
  <title>JHU-PL-Lab: sato</title>
  <author>
   <name>JHU-PL-Lab</name>
  </author>
  <link href="https://github.com/JHU-PL-Lab/sato" />
  <id>urn:rprimus:github:JHU-PL-Lab:sato</id>
  <published>2020-07-22T14:31:36Z</published>
  <updated>2020-07-22T14:31:36Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Arbakkinn: maze</title>
  <author>
   <name>Arbakkinn</name>
  </author>
  <link href="https://github.com/Arbakkinn/maze" />
  <id>urn:rprimus:github:Arbakkinn:maze</id>
  <published>2020-07-22T13:45:56Z</published>
  <updated>2020-07-22T13:45:56Z</updated>
  <content type="html">
   A simple maze generator / solver
  </content>
 </entry>
 <entry>
  <title>Chiruag: Excel-Calculator</title>
  <author>
   <name>Chiruag</name>
  </author>
  <link href="https://github.com/Chiruag/Excel-Calculator" />
  <id>urn:rprimus:github:Chiruag:Excel-Calculator</id>
  <published>2020-07-22T08:33:39Z</published>
  <updated>2020-07-22T08:33:39Z</updated>
  <content type="html">
   This lets the user create a excel spreadsheet and lets the user apply various functions
  </content>
 </entry>
 <entry>
  <title>o-labs: opam-bin</title>
  <author>
   <name>o-labs</name>
  </author>
  <link href="https://github.com/o-labs/opam-bin" />
  <id>urn:rprimus:github:o-labs:opam-bin</id>
  <published>2020-07-22T07:09:31Z</published>
  <updated>2020-07-22T07:09:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Chiruag: Matrix-and-Vector-Manipulation</title>
  <author>
   <name>Chiruag</name>
  </author>
  <link href="https://github.com/Chiruag/Matrix-and-Vector-Manipulation" />
  <id>urn:rprimus:github:Chiruag:Matrix-and-Vector-Manipulation</id>
  <published>2020-07-22T06:31:00Z</published>
  <updated>2020-07-22T06:31:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>samielatri: initiation-ocaml</title>
  <author>
   <name>samielatri</name>
  </author>
  <link href="https://github.com/samielatri/initiation-ocaml" />
  <id>urn:rprimus:github:samielatri:initiation-ocaml</id>
  <published>2020-07-22T01:47:11Z</published>
  <updated>2020-07-22T01:47:11Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>fumita: compiler</title>
  <author>
   <name>fumita</name>
  </author>
  <link href="https://github.com/fumita/compiler" />
  <id>urn:rprimus:github:fumita:compiler</id>
  <published>2020-07-21T14:44:48Z</published>
  <updated>2020-07-21T14:44:48Z</updated>
  <content type="html">
   [WIP] The original compiler written in OCaml
  </content>
 </entry>
 <entry>
  <title>laurenharpole: Gardening-Game</title>
  <author>
   <name>laurenharpole</name>
  </author>
  <link href="https://github.com/laurenharpole/Gardening-Game" />
  <id>urn:rprimus:github:laurenharpole:Gardening-Game</id>
  <published>2020-07-21T14:23:15Z</published>
  <updated>2020-07-21T14:23:15Z</updated>
  <content type="html">
   A game created with functional programming language, OCaml, which simulates managing a garden. The user can purchase seeds at a shop and plant those seeds after tilling some land. The user can âstepâ to the next day by sleeping. After a plant grows to full age, the player can harvest it and sell it back to the shop! Watch out though, if you donât water your plants every day, they die! Graphics done using the OCaml Graphical Interface. Created by myself and my team as a final project for CS 3110.
  </content>
 </entry>
 <entry>
  <title>bhfarb: CS51_final_project</title>
  <author>
   <name>bhfarb</name>
  </author>
  <link href="https://github.com/bhfarb/CS51_final_project" />
  <id>urn:rprimus:github:bhfarb:CS51_final_project</id>
  <published>2020-07-21T13:55:48Z</published>
  <updated>2020-07-21T13:55:48Z</updated>
  <content type="html">
   OCaml-like language Miniml.
  </content>
 </entry>
 <entry>
  <title>Ngoguey42: io</title>
  <author>
   <name>Ngoguey42</name>
  </author>
  <link href="https://github.com/Ngoguey42/io" />
  <id>urn:rprimus:github:Ngoguey42:io</id>
  <published>2020-07-21T13:45:39Z</published>
  <updated>2020-07-21T13:45:39Z</updated>
  <content type="html">
   https://ngoguey42.github.io
  </content>
 </entry>
 <entry>
  <title>bikallem: reparse</title>
  <author>
   <name>bikallem</name>
  </author>
  <link href="https://github.com/bikallem/reparse" />
  <id>urn:rprimus:github:bikallem:reparse</id>
  <published>2020-07-21T11:55:01Z</published>
  <updated>2020-07-21T11:55:01Z</updated>
  <content type="html">
   Recursive descent, monadic parser for ocaml
  </content>
 </entry>
</feed>
